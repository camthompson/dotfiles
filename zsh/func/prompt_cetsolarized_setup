function coalesce {
  for arg in $argv; do
    print "$arg"
    return 0
  done
  return 1
}

function prompt_cam_pwd {
  local pwd="${PWD/#$HOME/~}"

  if [[ "$pwd" == (#m)[/~] ]]; then
    _prompt_cam_pwd="$MATCH"
    unset MATCH
  else
    _prompt_cam_pwd="${${${(@j:/:M)${(@s:/:)pwd}##.#?}:h}%/}/${pwd:t}"
  fi
}

function prompt_cam_precmd {
  prompt_cam_pwd

  git-info

  ruby-info
}

function prompt_cam_setup {
  prompt_opts=(cr percent subst)

  # Load required functions.
  autoload -Uz add-zsh-hook

  # Add hook for calling git-info before each command.
  add-zsh-hook precmd prompt_cam_precmd

  zstyle ':keymap:insert' format ' %F{blue}>'
  zstyle ':keymap:overwrite' format ' %F{red}>'
  zstyle ':keymap:command' format ' %F{blue}<'
  zstyle ':git:action' format ':%F{magenta}%s'
  zstyle ':git:added' format ' %F{magenta}+'
  zstyle ':git:ahead' format ' %F{magenta}▲'
  zstyle ':git:behind' format ' %F{magenta}▼'
  zstyle ':git:branch' format '%%B%F{magenta}%b%%b'
  zstyle ':git:commit' format '%F{green}%.7c'
  zstyle ':git:deleted' format ' %F{magenta}x'
  zstyle ':git:modified' format ' %F{magenta}*'
  zstyle ':git:position' format ':%F{magenta}%p'
  zstyle ':git:renamed' format ' %F{magenta}→'
  zstyle ':git:stashed' format ' %F{magenta}■'
  zstyle ':git:unmerged' format ' %F{magenta}§'
  zstyle ':git:untracked' format ' %F{magenta}?'
  zstyle ':git:keys' format \
    'prompt' '%f:$(coalesce "%b" "%p" "%c")%s' \
    'rprompt' '%A%B%S%a%d%m%r%U%u %c'

  # Define prompts.
  PROMPT='${SSH_TTY:+%F{green\}%m%b%f:}'
  PROMPT+='%F{yellow}${_prompt_cam_pwd}'
  PROMPT+='${git_info:+${(e)git_info[prompt]}}'
  PROMPT+='${editor_info[keymap]} %f%b'
  RPROMPT='${git_info[rprompt]}%f%b'
}

prompt_cam_setup "$@"
# vim:set ft=zsh:
