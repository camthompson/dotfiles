function coalesce {
  for arg in $argv; do
    print "$arg"
    return 0
  done
  return 1
}

function prompt_cam_pwd {
  local pwd="${PWD/#$HOME/~}"

  if [[ "$pwd" == (#m)[/~] ]]; then
    _prompt_cam_pwd="$MATCH"
    unset MATCH
  else
    _prompt_cam_pwd="${${${(@j:/:M)${(@s:/:)pwd}##.#?}:h}%/}/${pwd:t}"
  fi
}

function prompt_cam_precmd {
  prompt_cam_pwd

  git-info

  ruby-info
}

function prompt_cam_setup {
  prompt_opts=(cr percent subst)

  # Load required functions.
  autoload -Uz add-zsh-hook

  # Add hook for calling git-info before each command.
  add-zsh-hook precmd prompt_cam_precmd

  zstyle ':keymap:insert' format ' %b%F{cyan}>%f%b'
  zstyle ':keymap:overwrite' format ' %f{red}>%f'
  zstyle ':keymap:command' format ' %b%F{cyan}<%f%b'
  zstyle ':git:action' format ':%%F{magenta}%s%f%%b'
  zstyle ':git:added' format ' %%F{magenta}+%f%%b'
  zstyle ':git:ahead' format ' %%F{magenta}^%f%%b'
  zstyle ':git:behind' format ' %%F{magenta}V%f%%b'
  zstyle ':git:branch' format '%%B%F{magenta}%b%f'
  zstyle ':git:commit' format '%F{green}%.7c'
  zstyle ':git:deleted' format ' %%F{magenta}x%f%%b'
  zstyle ':git:modified' format ' %%F{magenta}*%f%%b'
  zstyle ':git:position' format ':%F{magenta}%p%f'
  zstyle ':git:renamed' format ' %%F{magenta}>%f%%b'
  zstyle ':git:stashed' format ' %%B%F{magenta}&%f%%b'
  zstyle ':git:unmerged' format ' %%F{magenta}=%f%%b'
  zstyle ':git:untracked' format ' %%F{magenta}?%f%%b'
  zstyle ':git:keys' format \
    'prompt' '%%b%f:%f$(coalesce "%b" "%p" "%c")%s' \
    'rprompt' '%A%B%S%a%d%m%r%U%u %c'

  # Define prompts.
  PROMPT='${SSH_TTY:+%F{green\}%m%b%f:}'
  PROMPT+='%F{blue}${_prompt_cam_pwd}'
  PROMPT+='%f${git_info:+${(e)git_info[prompt]}}'
  PROMPT+='${editor_info[keymap]} '
  RPROMPT='${git_info[rprompt]}'
}

prompt_cam_setup "$@"
# vim:set ft=zsh:
