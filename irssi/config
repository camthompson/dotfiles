servers = (
  {
    address = "card.freenode.net";
    autoconnect = "yes";
    chatnet = "freenode";
    port = "6697";
    use_ssl = "yes";
    ssl_verify = "yes";
  },
  { address = "localhost"; autoconnect = "yes"; chatnet = "bitlbee"; }
);

chatnets = { bitlbee = { type = "IRC"; }; freenode = { type = "IRC"; }; };

channels = (
  { name = "#5by5"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "#vim"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "#zsh"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "#git"; chatnet = "freenode"; autojoin = "Yes"; }
);

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "who";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  CALC = "exec - if command -v bc >/dev/null 2>i1\\; then printf '%s=' '$*'\\; echo '$*' | bc -l\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
  EXEMPTLIST = "mode $C +e";
  ATAG = "WINDOW SERVER";
  UNSET = "set -clear";
  RESET = "set -default";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb [$winref] $tag $itemname}";
    window_empty = "{sb $winname}";
    prompt = "{prompt}";
    prompt_empty = "{prompt}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://www.irssi.org";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: %R$0-%n} ";
    act = "{sb Act: $0-} ";
    more = "%k%3-- more --%n";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "yes";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
        usercount = { };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
    prompt = {
      items = {
        uberprompt = { priority = "-1"; };
        input = { priority = "10"; };
      };
      position = "100";
    };
    awl_0 = {
      items = {
        barstart = { priority = "100"; };
        awl_0 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_1 = {
      items = {
        barstart = { priority = "100"; };
        awl_1 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
settings = {
  core = { 
    real_name = "Cam Thompson";
    user_name = "camt";
    nick = "camt";
  };
  "fe-text" = { actlist_sort = "refnum"; };
  "fe-common/core" = {
    theme = "cam";
    hilight_color = "= %m";
    show_names_on_join = "no";
  };
  "irc/core" = { alternate_nick = "camth"; };
  "perl/core/scripts" = {
    awl_display_key = "$H $N-$C $S";
    awl_display_key_active = "$H%g%0 [$N-$C] $S";
    awl_separator = " ";
    neat_colorize = "yes";
    screen_away_active = "yes";
    screen_away_message = "AFK";
    neat_colors = "rRgGyYbMck";
    neat_allow_shrinking = "yes";
    neat_maxlength = "15";
    trackbar_style = "%b";
    growl_show_message_action = "no";
    growl_show_channel_topic = "no";
    trackbar_hide_windows = "(status),hilight";
    uberprompt_format = "$uber";
    uberprompt_format_empty = "$N($usermode)$A > ";
  };
  "irc/dcc" = { dcc_download_path = "~"; dcc_timeout = "180"; };
};
hilights = (
  {
    text = "camt";
    color = "%M";
    nick = "yes";
    word = "yes";
    fullword = "yes";
  },
  {
    text = "camthompson.com";
    color = "%M";
    nick = "no";
    word = "yes";
    fullword = "no";
  }
);
ignores = (
  {
    level = "JOINS PARTS QUITS NICKS";
    channels = ( "#vim", "#5by5", "#git", "#zsh" );
  },
  { level = "MODES"; channels = ( "ibitlbee" ); }
);
logs = { };
windows = {
  1 = { immortal = "yes"; name = "(status)"; level = "ALL"; };
  2 = { name = "hilight"; sticky = "yes"; };
  3 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "ibitlbee";
        tag = "bitlbee";
      }
    );
  };
  4 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#5by5";
        tag = "freenode";
      }
    );
  };
  5 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#vim";
        tag = "freenode";
      }
    );
  };
  6 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#zsh";
        tag = "freenode";
      }
    );
  };
  7 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#git";
        tag = "freenode";
      }
    );
  };
};
mainwindows = {
  3 = { first_line = "9"; lines = "42"; };
  2 = { first_line = "1"; lines = "8"; };
};
